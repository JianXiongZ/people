diff --git b/firmware/main.c a/firmware/main.c
index dbb55c2..1b254e6 100644
--- b/firmware/main.c
+++ a/firmware/main.c
@@ -382,19 +382,25 @@ static void encode_pkg(uint8_t *p, int type, uint8_t *buf, unsigned int len)
 	p[1] = AVA4_H2;
 
 	p[2] = type;
-	p[3] = g_dna[AVA4_MM_DNA_LEN-1];
+	p[3] = g_dna[AVA4_MM_DNA_LEN - 1];
 	p[4] = 1;
 	p[5] = 1;
 
 	data = p + 6;
 	switch (type) {
 	case AVA4_P_ACKDETECT:
-		p[3] = 0;
+		p[3] = g_module_id & 0xff;
 		memcpy(data, g_dna, AVA4_MM_DNA_LEN); /* MM_DNA */
 		memcpy(data + AVA4_MM_DNA_LEN, buf, AVA4_MM_VER_LEN); /* MM_VERSION */
 		memcpy(data + AVA4_MM_DNA_LEN + AVA4_MM_VER_LEN, &g_total_asics, 4);
+		/* MM area */
+		data[AVA4_MM_DNA_LEN + AVA4_MM_VER_LEN + 4] = (g_mmcfg.reserved >> 8) & 0xff;
+		data[AVA4_MM_DNA_LEN + AVA4_MM_VER_LEN + 5] = g_mmcfg.reserved & 0xff;
 		break;
 	case AVA4_P_NONCE:
+		p[3] = (g_dna[0] ^ g_dna[AVA4_MM_DNA_LEN - 1]);
+		memcpy(data, buf, len);
+		break;
 	case AVA4_P_TEST_RET:
 	case AVA4_P_SETM:
 		memcpy(data, buf, len);
@@ -615,6 +621,10 @@ static inline int decode_pkg(uint8_t *p, struct mm_work *mw)
 		/* Chagne voltage and freq in P_SET_VOLT / P_SET_FREQ (>= MM-4.1, MM4.0 >= 401501-4778d610) */
 		if ((g_errcode & CODE_TOOHOT) == CODE_TOOHOT)
 			break;
+
+		if ((g_errcode & CODE_LOCK) == CODE_LOCK)
+			break;
+
 		memcpy(&tmp, data, 4);
 		if (tmp & 0x80000000) {
 			if (g_ntime_offset != (tmp & 0x7fffffff)) {
@@ -685,7 +695,11 @@ static inline int decode_pkg(uint8_t *p, struct mm_work *mw)
 		break;
 
 	case AVA4_P_POLLING:
-		polling();
+		if (opt == (g_dna[0] ^ g_dna[AVA4_MM_DNA_LEN - 1]))
+			polling();
+		else
+			send_pkg(AVA4_P_STATUS, NULL, 0, 0);
+
 		memcpy(&tmp, data, 4);
 		g_ledblinking = tmp;
 
@@ -738,6 +752,13 @@ static inline int decode_pkg(uint8_t *p, struct mm_work *mw)
 	case AVA4_P_RSTMMTX:
 		iic_tx_reset();
 		break;
+	case AVA4_P_SET_AREA:
+		tmp = data[0] << 8 | data[1];
+		if (tmp == g_mmcfg.reserved)
+			break;
+		g_mmcfg.reserved = (int16_t)tmp;
+		mboot_save_config(&g_mmcfg);
+		break;
 	default:
 		debug32("D: unkown package\n");
 		hexdump(p, AVA4_P_COUNT);
@@ -801,8 +822,9 @@ static int get_pkg(struct mm_work *mw)
 					break;
 				}
 
+				/* FIXME: g_module_id is used in AVA4_P_ACKDETECT */
+				memcpy(&g_module_id, g_pkg + 6 + 28, 4);
 				if (send_pkg(AVA4_P_ACKDETECT, (uint8_t *)MM_VERSION, AVA4_MM_VER_LEN, 1)) {
-					memcpy(&g_module_id, g_pkg + 6 + 28, 4);
 					debug32("ID: %d\n", g_module_id);
 					iic_addr_set(g_module_id);
 					gpio_led(1);
@@ -816,8 +838,12 @@ static int get_pkg(struct mm_work *mw)
 					debug32("D: NTCB = %d\n", g_ntcb);
 				} else {
 					/* scene 2 */
+					g_module_id = AVA4_MODULE_BROADCAST;
 					iic_rx_reset();
 				}
+
+				if ((g_module_id & 0xff) == g_pkg[3])
+					g_errcode &= ~CODE_LOCK;
 				break;
 			case AVA4_P_REQUIRE:
 				send_pkg(AVA4_P_STATUS, NULL, 0, 0);
@@ -907,6 +933,7 @@ static inline void idle_process(void)
 	g_errcode |= CODE_NOSTRATUM;
 	g_local_work = 0;
 	g_ntime_offset = ASIC_NTIME_OFFSET;
+	g_errcode |= CODE_LOCK;
 
 	api_reset();
 	set_voltage(ASIC_0V);
@@ -1544,7 +1571,7 @@ int main(int argc, char **argv)
 #endif
 	uint32_t val[MINER_COUNT], i;
 
-	g_errcode = CODE_IDLE | CODE_NOSTRATUM;
+	g_errcode = CODE_IDLE | CODE_NOSTRATUM | CODE_LOCK;
 	enable_miner();
 	api_init(SPI_SPEED);
 	disable_pll();
@@ -1707,7 +1734,8 @@ int main(int argc, char **argv)
 			((g_errcode & CODE_NOFAN) == CODE_NOFAN) ||
 			((g_errcode & CODE_INVALIDMCU) == CODE_INVALIDMCU) ||
 			((g_errcode & CODE_VOL_ERR) == CODE_VOL_ERR) ||
-			(((g_errcode & CODE_ADC0_ERR) == CODE_ADC0_ERR) && ((g_errcode & CODE_ADC1_ERR) == CODE_ADC1_ERR)))
+			(((g_errcode & CODE_ADC0_ERR) == CODE_ADC0_ERR) && ((g_errcode & CODE_ADC1_ERR) == CODE_ADC1_ERR)) ||
+			((g_errcode & CODE_LOCK) == CODE_LOCK))
 			continue;
 
 		g_errcode &= ~CODE_IDLE;
diff --git b/firmware/protocol.h a/firmware/protocol.h
index 5762563..e612260 100644
--- b/firmware/protocol.h
+++ a/firmware/protocol.h
@@ -38,6 +38,7 @@
 #define AVA4_P_SET_VOLT	0x22
 #define AVA4_P_SET_FREQ	0x23
 #define AVA4_P_SETM	0x24
+#define AVA4_P_SET_AREA 0x25
 
 /* Have to send with I2C address */
 #define AVA4_P_POLLING	0x30
diff --git b/firmware/system_config.h a/firmware/system_config.h
index 53079ca..fd5a29a 100644
--- b/firmware/system_config.h
+++ a/firmware/system_config.h
@@ -25,6 +25,7 @@
 #define CODE_ADC0_ERR   (1 << 13)
 #define CODE_ADC1_ERR   (1 << 14)
 #define CODE_VOL_ERR	(1 << 15)
+#define CODE_LOCK	(1 << 16)
 
 #define IDLE_TIME	3	/* Seconds */
 #define TEMP_TIME	1	/* Seconds */
